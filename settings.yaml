DeepSwarm:
    save_folder:
    metrics: accuracy
    pheromone:
        start: 0.1
        decay: 0.1
        evaporation: 0.1
    backend:
        epochs: 1
        batch_size: 1000
        patience: 1

Nodes:
    InputNode:
        attributes: {}
        # What are possible transitions and how likely they are to appear. Likeliness
        # is expressed in percentage i.e. 0.5 means that there is 50% chance to go from
        # node x to node y. In summary it's a basic heuristic value used in case there
        # are some prior knowledge about problem
        transitions:
            Conv2DNode: 1
        # How much decrease probability of repeating the same node again i.e. if it's
        # set to 0.5, it means that probability for node x to go straight after node x
        # decreases by 50%. This value is created to promote diversity and prevent
        # repetitions like x->x->x->x.
        repetition_penalty: 1
    Conv2DNode:
        attributes:
            filter_number: [16, 32, 64]
            kernel_size: [1, 3, 5]
            activation: [ReLU]
        transitions:
            Conv2DNode: 0.3
            Pool2DNode: 0.4
            FlattenNode: 0.3
        repetition_penalty: 0.5
    Pool2DNode:
        attributes:
            type: [max]
            pool_size: [2]
            stride: [2, 3]
        transitions:
            Conv2DNode: 0.3
            FlattenNode: 0.4
        repetition_penalty: 0.5
    FlattenNode:
        attributes: {}
        transitions:
            DenseNode: 0.3
        repetition_penalty: 0.5
    DenseNode:
        attributes:
            output_size: [32, 64, 128, 256]
            activation: ["ReLU"]
        transitions:
            DenseNode: 0.3
            DropoutNode: 0.7
        repetition_penalty: 0.5
    DropoutNode:
        attributes:
            rate: [0.1, 0.3, 0.5]
        transitions:
            DenseNode: 0.3
        repetition_penalty: 0.5
    EndNode:
        attributes: {}
        transitions: {}
        repetition_penalty: 1

